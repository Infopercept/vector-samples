data_dir: "/var/lib/vector"

sources:
  auth_logs:
    type: file
    include:
      - "auth.log"
    ignore_checkpoints: true
    read_from: beginning

transforms:
  parse_connection_reset:
    type: remap
    inputs:
      - auth_logs
    source: |
      parsed = parse_regex!(.message, r'^(?P<timestamp>\w+\s+\d{1,2}\s+\d+:\d+:\d+)\s+(?P<hostname>\S+)\s+(?P<program>\S+)\[(?P<pid>\d+)\]:\s+Connection reset by\s+(?:(?P<user_type>invalid|authenticating)\s+user\s+)?(?P<username>\S+)\s+(?P<source_ip>[\d\.]+)\s+port\s+(?P<port>\d+)\s+\[(?P<status>[^\]]+)\]$')
      if parsed != null {
        .timestamp  = parsed.timestamp
        .hostname   = parsed.hostname
        .program    = parsed.program
        .appname    = parsed.program
        .pid        = to_int!(parsed.pid)
        .event_type = "connection reset"
        .user_type  = parsed.user_type
        .username   = parsed.username
        .source_ip  = parsed.source_ip
        .port       = to_int!(parsed.port)
        .status     = parsed.status
        . = compact(.)
      } else {
        log("Failed to parse connection reset log", level: "error")
      }
      del(.file)

sinks:
  output:
    type: file
    inputs:
      - parse_connection_reset
    path: "vector_parsed_log.json"
    encoding:
      codec: json
