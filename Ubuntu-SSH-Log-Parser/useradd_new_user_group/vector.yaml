data_dir: "/var/lib/vector"

sources:
  auth_logs:
    type: "file"
    include:
      - "auth.log"
    start_at_beginning: true

transforms:
  parse_useradd:
    type: "remap"
    inputs:
      - "auth_logs"
    source: |
      pattern = r'^(?P<timestamp>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<hostname>\S+)\s+(?P<program>\S+)\[(?P<pid>\d+)\]:\s+(?P<log_type>new group|new user):\s+name=(?P<name>\S+),\s+(?:(?:GID=(?P<gid>\d+))|(?:UID=(?P<uid>\d+),\s+GID=(?P<gid2>\d+),\s+home=(?P<home>\S+),\s+shell=(?P<shell>\S+),\s+from=(?P<from>\S+)))$'
      parsed = parse_regex!(.message, pattern)
      
      .timestamp  = parsed.timestamp
      .hostname   = parsed.hostname
      .program    = parsed.program
      .appname    = parsed.program
      .pid        = to_int!(parsed.pid)
      .log_type   = parsed.log_type
      .name       = parsed.name
      
      if .log_type == "new group" {
        .gid = to_int!(parsed.gid)
      } else {
        .uid   = to_int!(parsed.uid)
        .gid   = to_int!(parsed.gid2)
        .home  = parsed.home
        .shell = parsed.shell
        .from  = parsed.from
      }
      
      .event_type = "useradd_event"
      
      del(.file)

sinks:
  output:
    type: "file"
    inputs:
      - "parse_useradd"
    path: "vector_parsed_useradd.json"
    encoding:
      codec: "json"
