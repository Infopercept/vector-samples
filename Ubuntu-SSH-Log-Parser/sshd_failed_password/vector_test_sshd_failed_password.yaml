tests:
  - name: "Verify SSH failed password parsing"
    inputs:
      - insert_at: "parse_failed_password"
        type: "log"
        log_fields:
          message: "Feb 20 10:48:27 mihir-ubuntu sshd[15112]: Failed password for invalid user mihirs from 192.168.186.1 port 62747 ssh2"

    outputs:
      - extract_from: "parse_failed_password"
        conditions:
          - type: "vrl"
            source: |
              # Validate expected fields and values
              assert!(exists(.timestamp), "timestamp missing")
              assert_eq!(.timestamp, "Feb 20 10:48:27", "unexpected timestamp value")


              assert!(exists(.program), "program missing")
              assert_eq!(.program, "sshd", "unexpected program value")

              assert!(exists(.appname), "appname missing")
              assert_eq!(.appname, "sshd", "unexpected appname value")

              assert!(exists(.pid), "pid missing")
              assert_eq!(.pid, 15112, "unexpected pid value")

              assert!(exists(.event_type), "event_type missing")
              assert_eq!(.event_type, "Failed password", "unexpected event_type value")


              assert!(exists(.username), "username missing")
              assert_eq!(.username, "mihirs", "unexpected username value")

              assert!(exists(.source_ip), "source_ip missing")
              assert_eq!(.source_ip, "192.168.186.1", "unexpected source_ip value")

              assert!(exists(.port), "port missing")
              assert_eq!(.port, 62747, "unexpected port value")

              assert!(exists(.protocol), "protocol missing")
              assert_eq!(.protocol, "ssh2", "unexpected protocol value")