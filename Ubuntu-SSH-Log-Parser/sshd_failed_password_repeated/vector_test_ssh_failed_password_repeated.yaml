tests:
  - name: "Verify failed password repeated log processing"
    inputs:
      - insert_at: "parse_repeated_message"
        type: "log"
        log_fields:
          message: "Feb 20 10:50:33 mihir-ubuntu sshd[15114]: message repeated 2 times: [ Failed password for root from 192.168.186.1 port 62750 ssh2]"

    outputs:
      - extract_from: "parse_repeated_message"
        conditions:
          - type: "vrl"
            source: |
              # Verify that all expected fields exist and contain the correct values.
              assert!(exists(.timestamp), "timestamp missing")
              assert_eq!(.timestamp, "Feb 20 10:50:33", "unexpected timestamp value")
              assert!(exists(.hostname), "hostname missing")
              assert_eq!(.hostname, "mihir-ubuntu", "unexpected hostname value")
              assert!(exists(.program), "program missing")
              assert_eq!(.program, "sshd", "unexpected program value")
              assert!(exists(.app_name), "app_name missing")
              assert_eq!(.app_name, "sshd", "unexpected app_name value")
              assert!(exists(.pid), "pid missing")
              assert_eq!(.pid, 15114, "unexpected pid value")
              assert!(exists(.repeat_times), "repeat_times missing")
              assert_eq!(.repeat_times, 2, "unexpected repeat_times value")
              assert!(exists(.reason), "reason missing")
              assert_eq!(.reason, "Failed password", "unexpected reason value")
              assert!(exists(.username), "username missing")
              assert_eq!(.username, "root", "unexpected username value")
              assert!(exists(.source_ip), "source_ip missing")
              assert_eq!(.source_ip, "192.168.186.1", "unexpected source_ip value")
              assert!(exists(.port), "port missing")
              assert_eq!(.port, 62750, "unexpected port value")
              assert!(exists(.protocol), "protocol missing")
              assert_eq!(.protocol, "ssh2", "unexpected protocol value")
              assert!(exists(.event_type), "event_type missing")
              assert_eq!(.event_type, "Failed password repeated", "unexpected event_type value")
